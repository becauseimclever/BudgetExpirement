@using Microsoft.FluentUI.AspNetCore.Components

<div class="running-total-banner @GetBannerClass()"
     title="@Tooltip">
    <FluentLabel Typo="Typography.Body" 
                 Class="@GetLabelClass()"
                 Style="@GetLabelInlineStyle()">
        @GetDisplayText()
    </FluentLabel>
</div>

<style>
    .running-total-banner {
        height: 18px;
        width: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2px 4px;
        border-top: 1px solid #d2d0ce;
        background-color: #f3f2f1;
        z-index: 10;
    }

    .running-total-banner.positive {
        background-color: #dff6dd !important;
        border-top-color: #92c5f7 !important;
    }

    .running-total-banner.negative {
        background-color: #fde7e9 !important;
        border-top-color: #f1aeb5 !important;
    }

    .running-total-banner.zero {
        background-color: #f3f2f1 !important;
        border-top-color: #d2d0ce !important;
    }

    @@media (max-width: 768px) {
        .running-total-banner {
            height: 16px;
        }
    }
</style>

@code {
    [Parameter] public decimal RunningTotal { get; set; }
    [Parameter] public DateOnly Day { get; set; }
    [Parameter] public decimal DailyAmount { get; set; }
    [Parameter] public string Tooltip { get; set; } = string.Empty;

    private string GetBannerClass()
    {
        if (RunningTotal > 0) return "positive";
        if (RunningTotal < 0) return "negative";
        return "zero";
    }

    private string GetLabelClass()
    {
        return "running-total-label";
    }

    private string GetLabelInlineStyle()
    {
        var baseStyle = "line-height: 1; margin: 0; font-size: 10px; font-weight: 700; text-align: center; width: 100%;";
        
        if (RunningTotal > 0)
        {
            return $"{baseStyle} color: #107c10 !important;";
        }
        else if (RunningTotal < 0)
        {
            return $"{baseStyle} color: #d13438 !important;";
        }
        else
        {
            return $"{baseStyle} color: #605e5c !important;";
        }
    }

    private string GetDisplayText()
    {
        if (RunningTotal == 0) return "$0";
        
        // Show explicit + for positive, - for negative
        if (RunningTotal > 0)
        {
            return $"+${RunningTotal:N0}";
        }
        else
        {
            return $"-${Math.Abs(RunningTotal):N0}";
        }
    }
}