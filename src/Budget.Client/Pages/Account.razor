@page "/account/{id:guid}"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Account Details</h3>

@if (account is null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <p><strong>Id:</strong> @account.Id</p>
        <p><strong>Name:</strong> @account.Name</p>
        <p><strong>Type:</strong> @account.Type</p>
        <p><strong>Created At:</strong> @account.CreatedAt.ToString("g")</p>
        <p><strong>Updated At:</strong> @account.UpdatedAt.ToString("g")</p>
    </div>
}

@code {
    [Parameter]
    public Guid id { get; set; }

    private Budget.Models.Account? account;

    protected override async Task OnInitializedAsync()
    {
        if (id == Guid.Empty)
        {
            RedirectToAccounts();
            return;
        }

        try
        {
            account = await HttpClient.GetFromJsonAsync<Budget.Models.Account>($"api/accounts/{id}");
            if (account == null)
            {
                RedirectToAccounts();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching account: {ex.Message}");
            RedirectToAccounts();
        }
    }

    private void RedirectToAccounts()
    {
        NavigationManager.NavigateTo("/accounts");
    }
}
