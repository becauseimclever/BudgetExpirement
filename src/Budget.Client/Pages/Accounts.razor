@page "/accounts"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3>Accounts</h3>

@if (accounts is null)
{
    <p>Loading...</p>
}
else if (!accounts.Any())
{
    <p>No accounts found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Type</th>
                <th>Created At</th>
                <th>Updated At</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in accounts)
            {
                <tr>
                    <td>
                        <a href="@($"/account/{account.Id}")">@account.Name</a>
                    </td>
                    <td>@account.Type</td>
                    <td>@account.CreatedAt.ToString("g")</td>
                    <td>@account.UpdatedAt.ToString("g")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    private List<Budget.Models.Account>? accounts = new List<Budget.Models.Account>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            accounts = await HttpClient.GetFromJsonAsync<List<Budget.Models.Account>>("api/accounts");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching accounts: {ex.Message}");
        }
    }
}
